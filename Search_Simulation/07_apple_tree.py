# 7. 사과나무(다이아몬드)
# 문제 : 현수의 농장은 N*N 격자판으로 이루어져 있으며, 각 격자 안에는 한 그루의 사과가 심어져 있음
#        N의 크기는 항상 홀수임. 현수는 격자판 안의 사과를 수확할 때 다이아몬드 모양의 격자판만 수확하고
#        나머지 격자 안의 사과는 새들을 위해서 남겨놓음. 만약 N이 5라면 아래 그림과 같이 진한 부분의 사과를 수학함
#        현수가 수확하는 사과의 총개수를 출력
# 조건 : 첫 줄에 자연수 N(홀수, 3 <= N <= 20)이 주어짐
#        두 번째 줄부터 N줄에 걸쳐 각 줄에 N개의 자연수가 주어짐. 이 자연수는 각 격자 안에 있는 사과나무에 열린 사과의 개수임
#        각 격자 안 사과의 개수는 100을 넘지 않음
# 회고 : 기준점, 시작점, 끝점을 두고 범위를 설정하는 방법을 생각하지 못함
#        idx가 변하는 규칙은 알았지만, if문으로 i < n//2일 때 다시 범위를 줄어들게 하는 것을 생각하지 못함

# Solution_1
import sys

sys.stdin = open("input.txt", "r")

n = int(input())
g = [list(map(int, input().split())) for _ in range(n)]
res = 0
s = e = n // 2

for i in range(n):
    for j in range(s, e + 1):
        res += g[i][j]
    if i < n // 2:  # 범위 넓어짐
        s -= 1
        e += 1
    else:  # 범위 좁아짐
        s += 1
        e -= 1

print(res)


# test_case 1
# n = 5
# grid = 10 13 10 12 15
#        12 39 30 23 11
#        11 25 50 53 15
#        19 27 29 37 27
#        19 13 30 13 19
# result : 379

# test_case 2
# n = 7
# grid = 74 10 31 26 59 16 89
#        78 44 49 1 64 33 15
#        9 95 70 18 22 25 40
#        62 77 28 3 78 75 23
#        82 38 20 16 42 1 79
#        1 24 2 25 95 26 79
#        4 35 46 94 70 44 83
# result : 1049
