# 6. 중복순열 구하기
# 문제 : 1부터 N까지 번호가 적힌 구슬 중 중복을 허락하여 M번을 뽑아 일렬로 나열하는 방법을 모두 출력
#        결과를 출력한 뒤 맨 마지막에 총 경우의 수를 출력
# 조건 : 자연수 N(3 <= N <= 10), M(2 <= M <= N). 출력 순서는 사전 순으로 오름차순으로 출력
# 회고 : 강의 듣기 전에는 1 1, 2 2처럼 같은 숫자를 중복되게 뽑는 방법을 생각하지 못함
#        'M번을 뽑는다'는 말을 같은 숫자를 M번 뽑는다는 의미로 착각함. 번호를 중복(2번)해서 고를 수 있고, M은 뽑아내는 횟수를 의미함
#        이전 문제들은 이진 트리(상태 트리가 2갈래로 뻗음)였으나, 이 문제는 트리가 n갈래로 뻗음
#        sys.stdin.readline : 대량의 데이터가 입력되어도 빠르게 입력받음
#        sys.stdin.readline.rstrip() : 문자열을 받아오는 경우 공백(\n)이 생기니 제거

# My_Solution -> (성공) tree가 n가닥으로 뻗어나감
import sys

sys.stdin = open("input.txt", "r")
# input = sys.stdin.readline().rstrip()


def DFS(l):
    global cnt
    if l == m:  # 하나의 중복순열을 완성
        for i in res:
            print(i, end=" ")
        print()  # 줄바꿈
        cnt += 1
    else:
        for i in range(1, n + 1):  # 1 2 3
            res[l] = i
            DFS(l + 1)


if __name__ == "__main__":
    n, m = map(int, input().split())
    res = [0] * m
    cnt = 0
    DFS(0)
    print(cnt)


# test_case 1
# n, m = 3 2
# result : 1 1
#          1 2
#          1 3
#          2 1
#          2 2
#          2 3
#          3 1
#          3 2
#          3 3
#          9

# test_case 2
# n, m = 5 3
# result : 1 1 1
#          1 1 2
#          1 1 3
#          1 1 4
#          1 1 5
#          1 2 1
#          1 2 2
#          1 2 3
#          1 2 4
#          1 2 5
#          1 3 1
#          1 3 2
#          1 3 3
#          1 3 4
#          1 3 5
#          1 4 1
#          1 4 2
#          1 4 3
#          1 4 4
#          1 4 5
#          1 5 1
#          1 5 2
#          1 5 3
#          1 5 4
#          1 5 5
#          2 1 1
#          2 1 2
#          2 1 3
#          2 1 4
#          2 1 5
#          2 2 1
#          2 2 2
#          2 2 3
#          2 2 4
#          2 2 5
#          2 3 1
#          2 3 2
#          2 3 3
#          2 3 4
#          2 3 5
#          2 4 1
#          2 4 2
#          2 4 3
#          2 4 4
#          2 4 5
#          2 5 1
#          2 5 2
#          2 5 3
#          2 5 4
#          2 5 5
#          3 1 1
#          3 1 2
#          3 1 3
#          3 1 4
#          3 1 5
#          3 2 1
#          3 2 2
#          3 2 3
#          3 2 4
#          3 2 5
#          3 3 1
#          3 3 2
#          3 3 3
#          3 3 4
#          3 3 5
#          3 4 1
#          3 4 2
#          3 4 3
#          3 4 4
#          3 4 5
#          3 5 1
#          3 5 2
#          3 5 3
#          3 5 4
#          3 5 5
#          4 1 1
#          4 1 2
#          4 1 3
#          4 1 4
#          4 1 5
#          4 2 1
#          4 2 2
#          4 2 3
#          4 2 4
#          4 2 5
#          4 3 1
#          4 3 2
#          4 3 3
#          4 3 4
#          4 3 5
#          4 4 1
#          4 4 2
#          4 4 3
#          4 4 4
#          4 4 5
#          4 5 1
#          4 5 2
#          4 5 3
#          4 5 4
#          4 5 5
#          5 1 1
#          5 1 2
#          5 1 3
#          5 1 4
#          5 1 5
#          5 2 1
#          5 2 2
#          5 2 3
#          5 2 4
#          5 2 5
#          5 3 1
#          5 3 2
#          5 3 3
#          5 3 4
#          5 3 5
#          5 4 1
#          5 4 2
#          5 4 3
#          5 4 4
#          5 4 5
#          5 5 1
#          5 5 2
#          5 5 3
#          5 5 4
#          5 5 5
#          125
